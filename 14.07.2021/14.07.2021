# # """ lambda funkdiya """
# #
# #
# # def ikkilash(a):
# #     return a * 2
# #
# #
# # print(ikkilash(5))
# #
# #
# # ikkilash1 = lambda a: a * 2  # return a * 2; a: nuqta esa ()
# # print(ikkilash1(10))
# #
# # """
# #     lambda -> def
# #     ikkilash1 -> ikkilash
# # """
#
#
# # ikki va undan ortiq parameter
#
# # def yigindi(a, b):
# #     return a + b
# #
# #
# # yigindi1 = lambda a, b: a + b
# #
# # print(yigindi(2, 3))
# # print(yigindi1(1, 2))
# #
# # urt = lambda a, b, c, d: yigindi(yigindi1(a, b), yigindi1(c, d)) / 4
# #
# # urt1 = lambda a, b, c, d: (a + b + c + d) / 4
# #
# # print(urt1(1, 2, 3, 4))
#
#
# # funksiyani ichida lambda
#
# # masala. sonlar darajasini chiqarish:
#
# def kvadrat(n):
#     return lambda a: n ** 2
#
#
# son = kvadrat(5)  # son = lambda a: a ** n
#
# print(son(2))
# print(kvadrat(5)(2))
#
# # masala doirani uzunligini kiritish orqali funksiyani ichida lambdani qo'llab
# # yuzsini chiqaring
#
# # L = 2 * pi * R
# # S = pi * (R ** 2)
#
# def aynala(L):
#     return lambda pi: pi * (L/(2 * pi))**2
#
# x = aynala(10)
#
# print(x(3.14))
#
# # 2 - masala.
#
#
# def paralelopiped(a, b):
#     return lambda c: a * b * c
#
# x = paralelopiped(2, 3)
# print(x(5))
#
# # ikki sonning ko'paytmasi
#
#
# def kub(a):
#     return lambda b: a * b
#
#
# y = kub(5)
# print(y(2))
#
#
# def kub(a):
#     return a
#
#
# y = lambda b: kub(5) * b
#
# # ikki sonni yig'indisini n - darajasini chiqaring
#
#
# def yigindi(a, b):
#     d = a + b
#     return lambda n: d ** n
#
# x = int(input("x = "))
# y = int(input("y = "))
# z = int(input("z = "))
# k = yigindi(x, y)  # d = 5
#
# print(k(z))
#
# # ismingizni input qilasiz uni n marta chiqarasiz:
#
#
# def ism(i):
#     return lambda n: (i + ' ') * n
#
#
# k = input("ismingizni kiriting: ")
# n_ta_ism = ism(k)
# print(n_ta_ism(5))
# urt_arifmetik=lambda a,b,c,d: (a+b+c+d)/4
# print(urt_arifmetik(2, 3, 4, 5))

# doirani uzunligini kiritish orqali funksiya ichida lambda ni qo'llab yuzasini hisoblang
# def aylana(L):
#     return lambda pi: pi*(L/(2*pi))**2
# x=aylana(10)
# print(x(3.14))

# parallelepiped hajmi
# def parallelepiped(a,b):
#     return lambda c: a*b*c
# x=parallelepiped(2, 3)
# print(x(5))

# ikki sonning yigindisini n-darajasini topish
# def yigindi(a, b):
#     d=a+b
#     return lambda n: (a+b)**n
#
# k=yigindi(2,3)
# print(k(4))

# ismingizni input qilasiz uni n marta chiqarasiz
# def ism(i):
#     return lambda n: (i+ ' ')*n
#
# k=input("ismingizni kiriting: ")
# n_ta_ism=ism(k)
# print(n_ta_ism(10))

""" Pythonda sodda o'yinlar yaratish"""
# camelCase - bu yozish usuli
# masalan:-> Ism familiya foydalanuvchiRaqami chiqioshFunksiyasiO'zgaruvchisi
# import camelcase
#
# c=camelcase.CamelCase()
# txt="Salom dunyo"
# print(c.hump(txt))

import pygame
import time
import random

pygame.init()

white = (255, 255, 0)
yellow = (255, 255, 0)
black = (0, 0, 0)
red = (213, 50, 80)
green = (0, 255, 0)
blue = (50, 153, 213)

dis_width = 600
dis_height = 400

dis = pygame.display.set_mode((dis_width, dis_height))
pygame.display.set_caption('Snake Game by Edureka')

clock = pygame.time.Clock()

snake_block = 10
snake_speed = 15

font_style = pygame.font.SysFont("bahnschrift", 25)
score_font = pygame.font.SysFont("comicsansms", 35)


def Your_score(score):
    value = score_font.render("Your Score: " + str(score), True, yellow)
    dis.blit(value, [0, 0])


def our_snake(snake_block, snake_list):
    for x in snake_list:
        pygame.draw.rect(dis, black, [x[0], x[1], snake_block, snake_block])


def message(msg, color):
    mesg = font_style.render(msg, True, color)
    dis.blit(mesg, [dis_width / 6, dis_height / 3])


def gameLoop():
    game_over = False
    game_close = False

    x1 = dis_width / 2
    y1 = dis_height / 2

    x1_change = 0
    y1_change = 0

    snake_List = []
    Length_of_snake = 1

    foodx = round(random.randrange(0, dis_width - snake_block) / 10.0) * 10.0
    foody = round(random.randrange(0, dis_height - snake_block) / 10.0) * 10.0

    while not game_over:

        while game_close == True:
            dis.fill(blue)
            message("You Lost! Press C-Play Again or Q-Quit", red)
            Your_score(Length_of_snake - 1)
            pygame.display.update()

            for event in pygame.event.get():
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_q:
                        game_over = True
                        game_close = False
                    if event.key == pygame.K_c:
                        gameLoop()

        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                game_over = True
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_LEFT:
                    x1_change = -snake_block
                    y1_change = 0
                elif event.key == pygame.K_RIGHT:
                    x1_change = snake_block
                    y1_change = 0
                elif event.key == pygame.K_UP:
                    y1_change = -snake_block
                    x1_change = 0
                elif event.key == pygame.K_DOWN:
                    y1_change = snake_block
                    x1_change = 0

        if x1 >= dis_width or x1 < 0 or y1 >= dis_height or y1 < 0:
            game_close = True
        x1 += x1_change
        y1 += y1_change
        dis.fill(blue)
        pygame.draw.rect(dis, green, [foodx, foody, snake_block, snake_block])
        snake_Head = []
        snake_Head.append(x1)
        snake_Head.append(y1)
        snake_List.append(snake_Head)
        if len(snake_List) > Length_of_snake:
            del snake_List[0]

        for x in snake_List[:-1]:
            if x == snake_Head:
                game_close = True

        our_snake(snake_block, snake_List)
        Your_score(Length_of_snake - 1)

        pygame.display.update()

        if x1 == foodx and y1 == foody:
            foodx = round(random.randrange(0, dis_width - snake_block) / 10.0) * 10.0
            foody = round(random.randrange(0, dis_height - snake_block) / 10.0) * 10.0
            Length_of_snake += 1

        clock.tick(snake_speed)

    pygame.quit()
    quit()


gameLoop()